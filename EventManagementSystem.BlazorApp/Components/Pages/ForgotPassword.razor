@page "/forgot-password"
@layout EventManagementSystem.BlazorApp.Components.Layout.AuthLayout
@using EventManagementSystem.Core.DTOs
@using EventManagementSystem.BlazorApp.Services
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Forgot Password - Event Management System</PageTitle>

<div class="forgot-password-container">
    <div class="forgot-password-card">
        <!-- Header -->
        <div class="forgot-password-header">
            <div class="forgot-password-logo">
                <i class="bi bi-key"></i>
            </div>
            <h2>Forgot Your Password?</h2>
            <p class="text-muted">No worries! Enter your email address and we'll send you a reset link.</p>
        </div>

        <!-- Forgot Password Form -->
        <EditForm Model="forgotPasswordDto" OnValidSubmit="HandleForgotPassword" class="forgot-password-form">
            <DataAnnotationsValidator />

            <!-- Show Alert Messages -->
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    <i class="bi bi-exclamation-triangle me-2" aria-hidden="true"></i>
                    @errorMessage
                </div>
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success" role="alert">
                    <i class="bi bi-check-circle me-2" aria-hidden="true"></i>
                    @successMessage
                </div>
            }

            @if (!isEmailSent)
            {
                <!-- Email Field -->
                <div class="form-group">
                    <label for="email" class="form-label">Email Address</label>
                    <div class="input-group">
                        <span class="input-group-text" aria-label="Email icon">
                            <i class="bi bi-envelope" aria-hidden="true"></i>
                        </span>
                        <InputText @bind-Value="forgotPasswordDto.Email"
                                   class="form-control"
                                   id="email"
                                   placeholder="Enter your email address"
                                   autocomplete="email"
                                   aria-describedby="email-validation" />
                    </div>
                    <ValidationMessage For="@(() => forgotPasswordDto.Email)"
                                       class="text-danger"
                                       id="email-validation" />
                </div>

                <!-- Submit Button -->
                <button type="submit"
                        class="btn btn-primary btn-lg w-100"
                        disabled="@(isLoading || string.IsNullOrWhiteSpace(forgotPasswordDto.Email))">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        <span>Sending Reset Link...</span>
                    }
                    else
                    {
                        <i class="bi bi-send me-2" aria-hidden="true"></i>
                        <span>Send Reset Link</span>
                    }
                </button>
            }
            else
            {
                <!-- Success State -->
                <div class="success-state">
                    <div class="success-icon">
                        <i class="bi bi-envelope-check"></i>
                    </div>
                    <h3>Check Your Email!</h3>
                    <p>We've sent a password reset link to <strong>@forgotPasswordDto.Email</strong></p>
                    <div class="email-instructions">
                        <h4>What's next?</h4>
                        <ul>
                            <li>Check your email inbox (and spam folder)</li>
                            <li>Click the reset link in the email</li>
                            <li>Create your new password</li>
                            <li>Sign in with your new password</li>
                        </ul>
                    </div>
                    <button type="button" class="btn btn-outline-primary" @onclick="ResetForm">
                        <i class="bi bi-arrow-left me-2"></i>
                        Try Different Email
                    </button>
                </div>
            }
        </EditForm>

        <!-- Back to Login Link -->
        <div class="forgot-password-footer">
            <p class="text-center text-muted">
                Remember your password?
                <a href="/login" class="back-to-login-link">Back to Sign In</a>
            </p>
        </div>
    </div>
</div>

<style>
    .forgot-password-container {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 20px;
    }

    .forgot-password-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: var(--border-radius-xl);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 40px;
        max-width: 450px;
        width: 100%;
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
    }

    .forgot-password-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--primary-color) 0%, var(--accent-color) 100%);
    }

    .forgot-password-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .forgot-password-logo {
        color: var(--primary-color);
        font-size: 3rem;
        margin-bottom: 20px;
    }

    .forgot-password-header h2 {
        color: var(--gray-800);
        font-weight: 700;
        margin-bottom: 8px;
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .forgot-password-form .form-group {
        margin-bottom: 25px;
    }

    .forgot-password-form .form-label {
        font-weight: 600;
        color: var(--gray-700);
        margin-bottom: 8px;
    }

    .success-state {
        text-align: center;
        padding: 20px 0;
    }

    .success-icon {
        color: var(--success-green);
        font-size: 4rem;
        margin-bottom: 20px;
        animation: bounceIn 0.6s ease-out;
    }

    .success-state h3 {
        color: var(--gray-800);
        font-weight: 700;
        margin-bottom: 15px;
    }

    .email-instructions {
        background: var(--primary-pale);
        border-radius: var(--border-radius);
        padding: 20px;
        margin: 25px 0;
        text-align: left;
    }

    .email-instructions h4 {
        color: var(--primary-color);
        font-weight: 600;
        margin-bottom: 12px;
        font-size: 16px;
    }

    .email-instructions ul {
        margin: 0;
        padding-left: 20px;
    }

    .email-instructions li {
        color: var(--gray-700);
        margin-bottom: 8px;
        font-size: 14px;
    }

    .forgot-password-footer {
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid var(--gray-200);
    }

    .back-to-login-link {
        color: var(--primary-color);
        text-decoration: none;
        font-weight: 600;
        transition: var(--transition-base);
    }

    .back-to-login-link:hover {
        color: var(--primary-dark);
        text-decoration: underline;
    }

    @@keyframes bounceIn {
        0% {
            opacity: 0;
            transform: scale(0.3);
        }
        50% {
            opacity: 1;
            transform: scale(1.05);
        }
        70% {
            transform: scale(0.9);
        }
        100% {
            opacity: 1;
            transform: scale(1);
        }
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .forgot-password-card {
            padding: 30px 20px;
            margin: 10px;
        }
        
        .forgot-password-logo {
            font-size: 2.5rem;
        }
    }

    @@media (max-width: 480px) {
        .forgot-password-container {
            padding: 10px;
        }
        
        .forgot-password-card {
            padding: 20px 15px;
        }
    }
</style>

@code {
    private ForgotPasswordDto forgotPasswordDto = new();
    private bool isLoading = false;
    private bool isEmailSent = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Check if user is already authenticated
        if (await AuthService.IsAuthenticatedAsync())
        {
            Navigation.NavigateTo("/dashboard");
        }
    }

    private async Task HandleForgotPassword()
    {
        if (isLoading) return;

        isLoading = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var result = await AuthService.ForgotPasswordAsync(forgotPasswordDto);

            if (result?.Success == true)
            {
                isEmailSent = true;
                successMessage = "Password reset email sent successfully!";
            }
            else
            {
                errorMessage = result?.Message ?? "Failed to send reset email. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred. Please try again later.";
            Console.WriteLine($"Forgot password error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ResetForm()
    {
        isEmailSent = false;
        forgotPasswordDto = new();
        errorMessage = string.Empty;
        successMessage = string.Empty;
        StateHasChanged();
    }
}
