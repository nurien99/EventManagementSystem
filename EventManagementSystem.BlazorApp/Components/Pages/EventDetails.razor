@page "/events/{eventId:int}"
@page "/events/{slug}"
@using EventManagementSystem.Core.DTOs
@using EventManagementSystem.BlazorApp.Services
@inject EventService EventService
@inject NavigationManager Navigation
@inject AuthService AuthService
@rendermode InteractiveServer

<PageTitle>@(eventDetails?.EventName ?? "Event Details") - Event Management System</PageTitle>

@if (isLoading)
{
    <div class="d-flex justify-content-center py-5">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading event details...</span>
        </div>
    </div>
}
else if (eventDetails == null)
{
    <div class="container py-5">
        <div class="text-center">
            <i class="bi bi-exclamation-triangle" style="font-size: 4rem; color: var(--warning);"></i>
            <h2 class="mt-3">Event Not Found</h2>
            <p class="text-muted">The event you're looking for doesn't exist or has been removed.</p>
            <button class="btn btn-primary" @onclick="NavigateToEvents">
                <i class="bi bi-arrow-left me-2"></i>Back to Events
            </button>
        </div>
    </div>
}
else
{
    <div class="event-details-page">
        <!-- Hero Section -->
        <div class="event-hero">
            @if (!string.IsNullOrEmpty(eventDetails.ImageUrl))
            {
                <div class="hero-image" style="background-image: url('@eventDetails.ImageUrl');">
                    <div class="hero-overlay">
                        <div class="container">
                            <div class="row">
                                <div class="col-12">
                                    <div class="hero-content">
                                        <nav aria-label="breadcrumb">
                                            <ol class="breadcrumb">
                                                <li class="breadcrumb-item">
                                                    <a href="/events" class="text-white-50">
                                                        <i class="bi bi-calendar-event me-1"></i>Events
                                                    </a>
                                                </li>
                                                <li class="breadcrumb-item active text-white">@eventDetails.EventName</li>
                                            </ol>
                                        </nav>
                                        <h1 class="display-4 text-white fw-bold mb-3">@eventDetails.EventName</h1>
                                        @if (eventDetails.Status == EventManagementSystem.Core.EventStatus.Published)
                                        {
                                            <span class="badge bg-success fs-6 mb-3">
                                                <i class="bi bi-check-circle me-1"></i>Registration Open
                                            </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="hero-gradient">
                    <div class="container py-5">
                        <div class="row">
                            <div class="col-12">
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb">
                                        <li class="breadcrumb-item">
                                            <a href="/events" class="text-white-50">
                                                <i class="bi bi-calendar-event me-1"></i>Events
                                            </a>
                                        </li>
                                        <li class="breadcrumb-item active text-white">@eventDetails.EventName</li>
                                    </ol>
                                </nav>
                                <h1 class="display-4 text-white fw-bold mb-3">@eventDetails.EventName</h1>
                                @if (eventDetails.Status == EventManagementSystem.Core.EventStatus.Published)
                                {
                                    <span class="badge bg-success fs-6">
                                        <i class="bi bi-check-circle me-1"></i>Registration Open
                                    </span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Main Content -->
        <div class="container py-5">
            <div class="row">
                <!-- Event Information -->
                <div class="col-lg-8">
                    <div class="card shadow-sm mb-4">
                        <div class="card-body">
                            <h2 class="h4 mb-4">
                                <i class="bi bi-info-circle text-primary me-2"></i>Event Details
                            </h2>
                            
                            @if (!string.IsNullOrEmpty(eventDetails.EventDesc))
                            {
                                <div class="event-description mb-4">
                                    <p class="lead">@eventDetails.EventDesc</p>
                                </div>
                            }

                            <!-- Event Information Grid -->
                            <div class="row g-4">
                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-calendar3 text-primary me-2"></i>
                                            <strong>Date & Time</strong>
                                        </div>
                                        <p class="ms-4 mb-0">
                                            @eventDetails.StartDate?.ToString("dddd, MMMM dd, yyyy")
                                            <br>
                                            <small class="text-muted">
                                                @eventDetails.StartDate?.ToString("h:mm tt")
                                                @if (eventDetails.EndDate.HasValue)
                                                {
                                                    @(" - " + eventDetails.EndDate.Value.ToString("h:mm tt"))
                                                }
                                            </small>
                                        </p>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-geo-alt text-primary me-2"></i>
                                            <strong>Location</strong>
                                        </div>
                                        <p class="ms-4 mb-0">
                                            @eventDetails.VenueName
                                            @if (!string.IsNullOrEmpty(eventDetails.VenueAddress))
                                            {
                                                <br>
                                                <small class="text-muted">@eventDetails.VenueAddress</small>
                                            }
                                        </p>
                                    </div>
                                </div>

                                @if (!string.IsNullOrEmpty(eventDetails.CategoryName))
                                {
                                    <div class="col-md-6">
                                        <div class="info-item">
                                            <div class="d-flex align-items-center mb-2">
                                                <i class="bi bi-tag text-primary me-2"></i>
                                                <strong>Category</strong>
                                            </div>
                                            <p class="ms-4 mb-0">
                                                <span class="category-pill">@eventDetails.CategoryName</span>
                                            </p>
                                        </div>
                                    </div>
                                }

                                <div class="col-md-6">
                                    <div class="info-item">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-people text-primary me-2"></i>
                                            <strong>Capacity</strong>
                                        </div>
                                        <p class="ms-4 mb-0">
                                            @eventDetails.TotalRegistrations registered
                                            @if (eventDetails.MaxCapacity.HasValue)
                                            {
                                                @(" of " + eventDetails.MaxCapacity.Value + " max")
                                                <br>
                                                <small class="text-muted">@eventDetails.AvailableSpots spots remaining</small>
                                            }
                                            else
                                            {
                                                <br>
                                                <small class="text-muted">Unlimited capacity</small>
                                            }
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Registration Panel -->
                <div class="col-lg-4">
                    <div class="card shadow-sm sticky-top" style="top: 2rem;">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">
                                <i class="bi bi-ticket-perforated me-2"></i>Register for Event
                            </h5>
                        </div>
                        <div class="card-body">
                            @if (eventDetails.Status != EventManagementSystem.Core.EventStatus.Published)
                            {
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle me-2"></i>
                                    Registration is currently closed for this event.
                                </div>
                            }
                            else if (eventDetails.AvailableSpots == 0)
                            {
                                <div class="alert alert-danger">
                                    <i class="bi bi-x-circle me-2"></i>
                                    This event is fully booked.
                                </div>
                            }
                            else if (eventDetails.TicketTypes.Any())
                            {
                                <h6 class="mb-3">Available Tickets:</h6>
                                
                                @foreach (var ticket in eventDetails.TicketTypes.Where(t => t.IsActive))
                                {
                                    <div class="ticket-option mb-3">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <strong>@ticket.TypeName</strong>
                                                @if (!string.IsNullOrEmpty(ticket.Description))
                                                {
                                                    <br>
                                                    <small class="text-muted">@ticket.Description</small>
                                                }
                                            </div>
                                            <div class="text-end">
                                                @if (ticket.Price > 0)
                                                {
                                                    <div class="fw-bold text-primary">$@ticket.Price</div>
                                                }
                                                else
                                                {
                                                    <div class="fw-bold text-success">FREE</div>
                                                }
                                            </div>
                                        </div>
                                        
                                        @if (ticket.Quantity > 0)
                                        {
                                            <small class="text-muted">
                                                Available: @ticket.AvailableQuantity of @ticket.Quantity
                                            </small>
                                        }

                                        <div class="d-grid mt-2">
                                            @if (currentUser != null)
                                            {
                                                <button class="btn btn-outline-primary btn-sm" 
                                                        @onclick="() => RegisterForTicket(ticket.TicketTypeID)"
                                                        disabled="@(ticket.AvailableQuantity == 0)">
                                                    @if (ticket.AvailableQuantity == 0)
                                                    {
                                                        <span>Sold Out</span>
                                                    }
                                                    else
                                                    {
                                                        <i class="bi bi-plus-circle me-1"></i>
                                                        <span>Select</span>
                                                    }
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-outline-primary btn-sm" 
                                                        @onclick="NavigateToLogin">
                                                    <i class="bi bi-person-plus me-1"></i>Login to Register
                                                </button>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle me-2"></i>
                                    No tickets are currently available for this event.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Registration Modal -->
    <RegistrationModal IsVisible="showRegistrationModal"
                      IsVisibleChanged="OnRegistrationModalVisibilityChanged"
                      EventId="eventDetails.EventID"
                      EventName="eventDetails.EventName"
                      SelectedTicketType="selectedTicketType"
                      OnRegistrationCompleted="OnRegistrationCompleted" />
}

<style>
    .event-hero {
        position: relative;
        margin-top: -2rem;
    }

    .hero-image {
        height: 400px;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        position: relative;
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6));
        display: flex;
        align-items: end;
        padding-bottom: 2rem;
    }

    .hero-gradient {
        background: linear-gradient(135deg, var(--primary-500) 0%, var(--primary-light) 100%);
        color: white;
    }

    .hero-content {
        color: white;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        color: rgba(255, 255, 255, 0.7);
    }

    .info-item {
        padding: 1rem;
        border-radius: 0.5rem;
        background-color: var(--bs-gray-50);
        height: 100%;
    }

    .category-pill {
        background: var(--primary-light);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 1rem;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .ticket-option {
        border: 1px solid var(--bs-border-color);
        border-radius: 0.5rem;
        padding: 1rem;
        transition: border-color 0.2s ease;
    }

    .ticket-option:hover {
        border-color: var(--primary-500);
    }

    .sticky-top {
        z-index: 10;
    }
</style>

@code {
    [Parameter] public int? EventId { get; set; }
    [Parameter] public string? Slug { get; set; }

    private EventDto? eventDetails;
    private bool isLoading = true;
    private UserDto? currentUser;
    private bool showRegistrationModal = false;
    private TicketTypeDto? selectedTicketType;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthService.GetCurrentUserAsync();
        await LoadEventDetails();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (eventDetails == null || 
            (EventId.HasValue && eventDetails.EventID != EventId.Value) ||
            (!string.IsNullOrEmpty(Slug) && eventDetails.UrlSlug != Slug))
        {
            await LoadEventDetails();
        }
    }

    private async Task LoadEventDetails()
    {
        isLoading = true;
        try
        {
            if (EventId.HasValue)
            {
                eventDetails = await EventService.GetEventByIdAsync(EventId.Value);
            }
            else if (!string.IsNullOrEmpty(Slug))
            {
                eventDetails = await EventService.GetEventBySlugAsync(Slug);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading event details: {ex.Message}");
            eventDetails = null;
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task RegisterForTicket(int ticketTypeId)
    {
        if (eventDetails?.TicketTypes != null)
        {
            selectedTicketType = eventDetails.TicketTypes.FirstOrDefault(t => t.TicketTypeID == ticketTypeId);
            if (selectedTicketType != null)
            {
                showRegistrationModal = true;
                StateHasChanged();
            }
        }
    }

    private async Task OnRegistrationModalVisibilityChanged(bool visible)
    {
        showRegistrationModal = visible;
        StateHasChanged();
    }

    private async Task OnRegistrationCompleted()
    {
        // Reload event details to update registration counts
        await LoadEventDetails();
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    private void NavigateToEvents()
    {
        Navigation.NavigateTo("/events");
    }
}